{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, authService, router, snackBar) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    // Criando o formulário de login\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  // Método para realizar o login\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe({\n        next: user => {\n          this.authService.storeToken(user.token); // Armazena o token\n          this.router.navigate(['/home']); // Redireciona para a página home\n          this.snackBar.open('Login realizado com sucesso!', '', {\n            duration: 3000\n          });\n        },\n        error: error => {\n          this.snackBar.open('Erro ao fazer login: ' + error, '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n}), __metadata(\"design:paramtypes\", [FormBuilder, typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object, Router, MatSnackBar])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}