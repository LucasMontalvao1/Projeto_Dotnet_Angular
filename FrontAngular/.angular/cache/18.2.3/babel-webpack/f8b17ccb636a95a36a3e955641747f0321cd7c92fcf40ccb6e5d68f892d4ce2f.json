{"ast":null,"code":"import { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nfunction HomeComponent_li_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const reminder_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(reminder_r1);\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.user = null; // Variável para armazenar os dados do usuário\n      this.selectedDate = null; // Para armazenar a data selecionada no calendário\n      this.reminders = []; // Lista de lembretes\n      this.filteredReminders = []; // Lembretes filtrados pela data selecionada\n    }\n    ngOnInit() {\n      const decodedToken = this.authService.getDecodedToken();\n      const token = this.authService.getToken(); // Obtém o token completo armazenado\n      if (decodedToken && token) {\n        // Mapeia os dados decodificados para o modelo de User e adiciona o token\n        this.user = {\n          usuarioID: decodedToken.nameid,\n          username: decodedToken.given_name,\n          name: decodedToken.unique_name,\n          email: decodedToken.email,\n          foto: decodedToken.Foto,\n          token: token\n        };\n        this.loadReminders(); // Carrega os lembretes ao inicializar\n      } else {\n        // Se o token não existir ou for inválido, redireciona para a página de login\n        this.router.navigate(['/login']);\n      }\n    }\n    // Método para carregar lembretes (substituir pela chamada à API se necessário)\n    loadReminders() {\n      this.reminders = ['Lembrete 1: Reunião às 10h', 'Lembrete 2: Entrega de projeto', 'Lembrete 3: Almoço com o time'\n      // Adicione mais lembretes conforme necessário\n      ];\n      this.filteredReminders = this.reminders; // Inicialmente, todos os lembretes estão visíveis\n    }\n    // Método chamado ao selecionar uma data no calendário\n    onDateSelected(date) {\n      this.selectedDate = date;\n      this.filterReminders(); // Filtra lembretes com base na data selecionada\n    }\n    // Método para filtrar lembretes pela data selecionada\n    filterReminders() {\n      // Aqui você pode implementar a lógica de filtragem baseada na data\n      // Exemplo: se você tiver lembretes que incluem datas, ajuste aqui\n      this.filteredReminders = this.reminders.filter(reminder => {\n        // Implementar lógica de filtragem baseada na data\n        return true; // Ajuste conforme necessário\n      });\n    }\n    logout() {\n      this.authService.logout();\n      this.router.navigate(['/login']); // Redireciona para a página de login\n    }\n    static #_ = this.ɵfac = function HomeComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HomeComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 27,\n      vars: 6,\n      consts: [[1, \"home-container\"], [1, \"profile-card\"], [\"mat-card-avatar\", \"\", 1, \"header-avatar\"], [\"alt\", \"Foto do usu\\u00E1rio\", 1, \"user-avatar\", 3, \"src\"], [1, \"header-details\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"calendar-reminders\"], [1, \"calendar-card\"], [3, \"selectedChange\", \"ngModelChange\", \"ngModel\"], [1, \"reminders-card\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"div\", 2);\n          i0.ɵɵelement(4, \"img\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"mat-card-title\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p\");\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"mat-card-actions\")(13, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_13_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵtext(14, \"Sair\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 6)(16, \"mat-card\", 7)(17, \"mat-card-title\");\n          i0.ɵɵtext(18, \"Calend\\u00E1rio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-card-content\")(20, \"mat-calendar\", 8);\n          i0.ɵɵlistener(\"selectedChange\", function HomeComponent_Template_mat_calendar_selectedChange_20_listener($event) {\n            return ctx.onDateSelected($event);\n          });\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function HomeComponent_Template_mat_calendar_ngModelChange_20_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedDate, $event) || (ctx.selectedDate = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"mat-card\", 9)(22, \"mat-card-title\");\n          i0.ɵɵtext(23, \"Lembretes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"mat-card-content\")(25, \"ul\");\n          i0.ɵɵtemplate(26, HomeComponent_li_26_Template, 2, 1, \"li\", 10);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"src\", ctx.user == null ? null : ctx.user.foto, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Bem-vindo, \", ctx.user == null ? null : ctx.user.name, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.user == null ? null : ctx.user.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Username: \", ctx.user == null ? null : ctx.user.username, \"\");\n          i0.ɵɵadvance(9);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedDate);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.filteredReminders);\n        }\n      },\n      styles: [\".home-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;padding:1rem}.profile-card[_ngcontent-%COMP%]{width:100%;max-width:600px;margin-bottom:1rem}.header-avatar[_ngcontent-%COMP%]{display:flex;align-items:center;margin-right:16px}.user-avatar[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;object-fit:cover}.header-details[_ngcontent-%COMP%]{flex-grow:1}.calendar-reminders[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;max-width:800px}.calendar-card[_ngcontent-%COMP%], .reminders-card[_ngcontent-%COMP%]{flex:1;margin:0 .5rem}.calendar-card[_ngcontent-%COMP%]{margin-right:1rem}ul[_ngcontent-%COMP%]{list-style-type:none;padding:0}\"]\n    });\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}