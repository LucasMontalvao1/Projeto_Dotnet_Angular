{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router, snackBar) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.snackBar = snackBar;\n      // Criando o formulário de login\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    // Método para realizar o login\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.authService.login(this.loginForm.value).subscribe({\n          next: user => {\n            this.authService.storeToken(user.token); // Armazena o token\n            this.router.navigate(['/home']); // Redireciona para a página home\n            this.snackBar.open('Login realizado com sucesso!', '', {\n              duration: 3000\n            });\n          },\n          error: error => {\n            this.snackBar.open('Erro ao fazer login: ' + error, '', {\n              duration: 3000\n            });\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 2,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"login works!\");\n          i0.ɵɵelementEnd();\n        }\n      }\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}