{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button-toggle\";\nimport * as i5 from \"@angular/material/datepicker\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/tooltip\";\nfunction TransacaoFiltroComponent_ng_container_12_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Selecione um m\\u00EAs v\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransacaoFiltroComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 10)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Selecione o M\\u00EAs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵelementStart(5, \"mat-datepicker-toggle\", 12)(6, \"mat-icon\", 13);\n    i0.ɵɵtext(7, \"calendar_today\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-datepicker\", 14, 0);\n    i0.ɵɵlistener(\"monthSelected\", function TransacaoFiltroComponent_ng_container_12_Template_mat_datepicker_monthSelected_8_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const monthPicker_r2 = i0.ɵɵreference(9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setMonthAndYear($event, monthPicker_r2));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, TransacaoFiltroComponent_ng_container_12_mat_error_10_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const monthPicker_r2 = i0.ɵɵreference(9);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", monthPicker_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", monthPicker_r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r2.filterForm.get(\"mesAno\")) == null ? null : tmp_4_0.invalid);\n  }\n}\nfunction TransacaoFiltroComponent_ng_container_13_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Data inicial \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransacaoFiltroComponent_ng_container_13_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Data final \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransacaoFiltroComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 10)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Data In\\u00EDcio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 15);\n    i0.ɵɵelementStart(5, \"mat-datepicker-toggle\", 12)(6, \"mat-icon\", 13);\n    i0.ɵɵtext(7, \"calendar_today\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"mat-datepicker\", null, 1);\n    i0.ɵɵtemplate(10, TransacaoFiltroComponent_ng_container_13_mat_error_10_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-form-field\", 10)(12, \"mat-label\");\n    i0.ɵɵtext(13, \"Data Fim\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 16);\n    i0.ɵɵelementStart(15, \"mat-datepicker-toggle\", 12)(16, \"mat-icon\", 13);\n    i0.ɵɵtext(17, \"calendar_today\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"mat-datepicker\", null, 2);\n    i0.ɵɵtemplate(20, TransacaoFiltroComponent_ng_container_13_mat_error_20_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TransacaoFiltroComponent_ng_container_13_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.aplicarFiltro());\n    });\n    i0.ɵɵelementStart(22, \"mat-icon\");\n    i0.ɵɵtext(23, \"filter_list\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \" Aplicar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    let tmp_6_0;\n    let tmp_10_0;\n    const startPicker_r5 = i0.ɵɵreference(9);\n    const endPicker_r6 = i0.ɵɵreference(19);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", startPicker_r5)(\"max\", ctx_r2.maxDate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", startPicker_r5);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx_r2.filterForm.get(\"dataInicio\")) == null ? null : tmp_6_0.hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", endPicker_r6)(\"max\", ctx_r2.maxDate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", endPicker_r6);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx_r2.filterForm.get(\"dataFim\")) == null ? null : tmp_10_0.hasError(\"required\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.isPeriodoValido());\n  }\n}\nexport let TransacaoFiltroComponent = /*#__PURE__*/(() => {\n  class TransacaoFiltroComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.filtroChange = new EventEmitter();\n      this.maxDate = new Date();\n      this.destroy$ = new Subject();\n      this.initializeForm();\n    }\n    ngOnInit() {\n      this.setupFormSubscription();\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    initializeForm() {\n      this.filterForm = this.fb.group({\n        tipoFiltro: ['mes'],\n        mesAno: [new Date()],\n        dataInicio: [null],\n        dataFim: [null]\n      });\n    }\n    setupFormSubscription() {\n      this.filterForm.get('tipoFiltro')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.filterForm.patchValue({\n          mesAno: new Date(),\n          dataInicio: null,\n          dataFim: null\n        });\n        this.aplicarFiltro();\n      });\n    }\n    setMonthAndYear(date, datepicker) {\n      const ctrlValue = this.filterForm.get('mesAno')?.value;\n      const ctrlDate = new Date(ctrlValue);\n      ctrlDate.setMonth(date.getMonth());\n      ctrlDate.setFullYear(date.getFullYear());\n      this.filterForm.get('mesAno')?.setValue(ctrlDate);\n      datepicker.close();\n      this.aplicarFiltro();\n    }\n    aplicarFiltro() {\n      if (!this.filterForm.valid) return;\n      // Garantir que as datas estejam no formato correto antes de emitir\n      const formValue = this.filterForm.value;\n      // Se for filtro por período, validar as datas\n      if (formValue.tipoFiltro === 'periodo' && !this.isPeriodoValido()) {\n        return;\n      }\n      const filtro = {\n        tipoFiltro: formValue.tipoFiltro,\n        mesAno: formValue.tipoFiltro === 'mes' ? formValue.mesAno : undefined,\n        dataInicio: formValue.tipoFiltro === 'periodo' ? formValue.dataInicio : undefined,\n        dataFim: formValue.tipoFiltro === 'periodo' ? formValue.dataFim : undefined\n      };\n      this.filtroChange.emit(filtro);\n    }\n    limparFiltro() {\n      this.filterForm.patchValue({\n        tipoFiltro: 'mes',\n        mesAno: new Date(),\n        dataInicio: null,\n        dataFim: null\n      });\n      this.aplicarFiltro();\n    }\n    // Método público pois é usado no template\n    isPeriodoValido() {\n      const inicio = this.filterForm.get('dataInicio')?.value;\n      const fim = this.filterForm.get('dataFim')?.value;\n      return inicio && fim && inicio <= fim;\n    }\n    // Métodos utilitários para formatação de data\n    formatarData(data) {\n      if (!data) return '';\n      return new Date(data).toLocaleDateString('pt-BR');\n    }\n    // Método para obter o mês atual formatado\n    getMesAtual() {\n      const mesAno = this.filterForm.get('mesAno')?.value;\n      if (!mesAno) return '';\n      return new Date(mesAno).toLocaleDateString('pt-BR', {\n        month: 'long',\n        year: 'numeric'\n      });\n    }\n    // Método para verificar se o formulário está em estado de carregamento\n    isLoading() {\n      return this.filterForm.disabled;\n    }\n    // Método para habilitar/desabilitar o formulário\n    setFormEnabled(enabled) {\n      if (enabled) {\n        this.filterForm.enable();\n      } else {\n        this.filterForm.disable();\n      }\n    }\n    static {\n      this.ɵfac = function TransacaoFiltroComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TransacaoFiltroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TransacaoFiltroComponent,\n        selectors: [[\"app-transacao-filtro\"]],\n        outputs: {\n          filtroChange: \"filtroChange\"\n        },\n        decls: 18,\n        vars: 3,\n        consts: [[\"monthPicker\", \"\"], [\"startPicker\", \"\"], [\"endPicker\", \"\"], [1, \"filter-card\"], [1, \"filter-form\", 3, \"formGroup\"], [\"formControlName\", \"tipoFiltro\", \"aria-label\", \"Tipo de Filtro\", 1, \"filter-type-group\"], [\"value\", \"mes\"], [\"value\", \"periodo\"], [4, \"ngIf\"], [\"mat-button\", \"\", \"matTooltip\", \"Limpar filtros\", 1, \"clear-button\", 3, \"click\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"mesAno\", \"readonly\", \"\", \"placeholder\", \"MM/YYYY\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"matDatepickerToggleIcon\", \"\"], [\"startView\", \"year\", \"panelClass\", \"month-picker\", 3, \"monthSelected\"], [\"matInput\", \"\", \"formControlName\", \"dataInicio\", \"placeholder\", \"DD/MM/YYYY\", 3, \"matDatepicker\", \"max\"], [\"matInput\", \"\", \"formControlName\", \"dataFim\", \"placeholder\", \"DD/MM/YYYY\", 3, \"matDatepicker\", \"max\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Aplicar filtro\", 1, \"action-button\", 3, \"click\", \"disabled\"]],\n        template: function TransacaoFiltroComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\", 3)(1, \"mat-card-content\")(2, \"form\", 4)(3, \"mat-button-toggle-group\", 5)(4, \"mat-button-toggle\", 6)(5, \"mat-icon\");\n            i0.ɵɵtext(6, \"calendar_today\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(7, \" M\\u00EAs Espec\\u00EDfico \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-button-toggle\", 7)(9, \"mat-icon\");\n            i0.ɵɵtext(10, \"date_range\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(11, \" Per\\u00EDodo \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(12, TransacaoFiltroComponent_ng_container_12_Template, 11, 3, \"ng-container\", 8)(13, TransacaoFiltroComponent_ng_container_13_Template, 25, 9, \"ng-container\", 8);\n            i0.ɵɵelementStart(14, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function TransacaoFiltroComponent_Template_button_click_14_listener() {\n              return ctx.limparFiltro();\n            });\n            i0.ɵɵelementStart(15, \"mat-icon\");\n            i0.ɵɵtext(16, \"clear\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(17, \" Limpar \");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.filterForm);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.filterForm.get(\"tipoFiltro\")) == null ? null : tmp_1_0.value) === \"mes\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.filterForm.get(\"tipoFiltro\")) == null ? null : tmp_2_0.value) === \"periodo\");\n          }\n        },\n        dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.MatCard, i3.MatCardContent, i4.MatButtonToggleGroup, i4.MatButtonToggle, i5.MatDatepicker, i5.MatDatepickerInput, i5.MatDatepickerToggle, i5.MatDatepickerToggleIcon, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatInput, i8.MatButton, i9.MatIcon, i10.MatTooltip],\n        styles: [\".filter-card[_ngcontent-%COMP%]{margin-bottom:24px;border-radius:12px;background-color:#fff;box-shadow:0 2px 4px #0000001a;transition:box-shadow .3s ease}.filter-card[_ngcontent-%COMP%]:hover{box-shadow:0 4px 8px #0000001a}.filter-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]{padding:16px}.filter-form[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:16px;align-items:center}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]{background-color:#f5f5f5;border-radius:8px;margin-right:16px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{padding:4px 12px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px;font-size:18px;vertical-align:middle}.filter-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:auto;min-width:200px;margin-bottom:-1.25em}.filter-form[_ngcontent-%COMP%]   mat-form-field.mat-form-field-appearance-outline[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%]{margin:0}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%]{height:36px;margin-top:3px;padding:0 16px}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.filter-form[_ngcontent-%COMP%]   .action-button[disabled][_ngcontent-%COMP%]{opacity:.6;cursor:not-allowed}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]{height:36px;margin-top:3px}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]:hover{background-color:#0000000a}[_nghost-%COMP%]     .month-picker .mat-calendar-period-button{pointer-events:none}[_nghost-%COMP%]     .month-picker .mat-calendar-arrow{display:none}[_nghost-%COMP%]     .month-picker .mat-calendar-table{height:auto}[_nghost-%COMP%]     .mat-button-toggle-checked{background-color:#3498db!important;color:#fff!important}[_nghost-%COMP%]     .mat-button-toggle-checked mat-icon{color:#fff!important}[_nghost-%COMP%]     .mat-form-field-appearance-outline .mat-form-field-outline{background-color:#fff}@media (max-width: 768px){.filter-form[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]{width:100%;margin-right:0;margin-bottom:16px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{flex:1;text-align:center}.filter-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%], .filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]{width:100%;margin-top:8px}}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(-10px)}to{opacity:1;transform:translateY(0)}}.filter-card[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeIn .3s ease-out}\"]\n      });\n    }\n  }\n  return TransacaoFiltroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}