{"ast":null,"code":"import { TransacaoService } from '@/app/services/transacao.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@/app/services/transacao.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/datepicker\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/paginator\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nimport * as i11 from \"ng2-charts\";\nimport * as i12 from \"../../../../components/menu/menu.component\";\nimport * as i13 from \"../../../../components/footer/footer.component\";\nconst _c0 = (a0, a1) => ({\n  \"positive\": a0,\n  \"negative\": a1\n});\nconst _c1 = () => [5, 10, 25];\nfunction DashboardComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelement(1, \"mat-spinner\", 43);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_header_cell_96_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 44);\n    i0.ɵɵtext(1, \" Data \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, row_r2.data, \"dd/MM/yyyy\"), \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 44);\n    i0.ɵɵtext(1, \" Descri\\u00E7\\u00E3o \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_100_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", row_r3.descricao, \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 44);\n    i0.ɵɵtext(1, \" Tipo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_103_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"span\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, row_r4.tipo === \"Entrada\", row_r4.tipo === \"Sa\\u00EDda\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", row_r4.tipo, \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_105_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 44);\n    i0.ɵɵtext(1, \" Valor \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_106_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"span\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, row_r5.tipo === \"Entrada\", row_r5.tipo === \"Sa\\u00EDda\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 2, row_r5.valor, \"BRL\"), \" \");\n  }\n}\nfunction DashboardComponent_mat_header_row_107_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction DashboardComponent_mat_row_108_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(transacaoService) {\n      this.transacaoService = transacaoService;\n      this.transacoes = [];\n      this.isLoading = false;\n      this.error = null;\n      // Configuração do gráfico\n      this.barChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          label: 'Entradas',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }, {\n          data: [],\n          label: 'Saídas',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          borderWidth: 1\n        }]\n      };\n      this.barChartOptions = {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: function (value) {\n                return 'R$ ' + value.toFixed(2);\n              }\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                let label = context.dataset.label || '';\n                if (label) {\n                  label += ': ';\n                }\n                label += 'R$ ' + context.raw.toFixed(2);\n                return label;\n              }\n            }\n          }\n        }\n      };\n      this.barChartLegend = true;\n      this.barChartType = 'bar';\n    }\n    ngOnInit() {\n      this.loadChartData();\n    }\n    loadChartData() {\n      this.isLoading = true;\n      this.error = null;\n      this.transacaoService.getTransacoes().subscribe({\n        next: transacoes => {\n          this.transacoes = transacoes;\n          this.updateChartData();\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Erro ao carregar transações:', error);\n          this.error = 'Erro ao carregar os dados. Tente novamente mais tarde.';\n          this.isLoading = false;\n        }\n      });\n    }\n    updateChartData() {\n      // Agrupar transações por mês\n      const transacoesPorMes = this.agruparTransacoesPorMes();\n      // Preparar dados para o gráfico\n      const meses = Array.from(transacoesPorMes.keys()).sort();\n      const entradas = meses.map(mes => transacoesPorMes.get(mes)?.entradas || 0);\n      const saidas = meses.map(mes => transacoesPorMes.get(mes)?.saidas || 0);\n      // Atualizar dados do gráfico\n      this.barChartData.labels = meses;\n      this.barChartData.datasets[0].data = entradas;\n      this.barChartData.datasets[1].data = saidas;\n    }\n    agruparTransacoesPorMes() {\n      const mesesMap = new Map();\n      const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n      this.transacoes.forEach(transacao => {\n        const data = new Date(transacao.data);\n        const mesNome = meses[data.getMonth()];\n        if (!mesesMap.has(mesNome)) {\n          mesesMap.set(mesNome, {\n            entradas: 0,\n            saidas: 0\n          });\n        }\n        const valores = mesesMap.get(mesNome);\n        if (transacao.tipo === 'Entrada') {\n          valores.entradas += transacao.valor;\n        } else {\n          valores.saidas += transacao.valor;\n        }\n      });\n      return mesesMap;\n    }\n    // Métodos para cálculos de totais\n    getTotalEntradas() {\n      return this.transacoes.filter(t => t.tipo === 'Entrada').reduce((total, t) => total + t.valor, 0);\n    }\n    getTotalSaidas() {\n      return this.transacoes.filter(t => t.tipo === 'Saída').reduce((total, t) => total + t.valor, 0);\n    }\n    getSaldo() {\n      return this.getTotalEntradas() - this.getTotalSaidas();\n    }\n    getMediaMensal() {\n      const meses = new Set(this.transacoes.map(t => {\n        const data = new Date(t.data);\n        return `${data.getMonth()}-${data.getFullYear()}`;\n      })).size;\n      return meses > 0 ? this.getSaldo() / meses : 0;\n    }\n    // Método para recarregar os dados\n    reloadData() {\n      this.loadChartData();\n    }\n    // Formatação de moeda\n    formatCurrency(value) {\n      return new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(value);\n    }\n    // Método para verificar se há dados\n    hasData() {\n      return this.transacoes.length > 0;\n    }\n    // Método para obter mês atual\n    getMesAtual() {\n      const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n      return meses[new Date().getMonth()];\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TransacaoService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 111,\n        vars: 40,\n        consts: [[\"picker\", \"\"], [1, \"dashboard-container\"], [\"class\", \"loading-overlay\", 4, \"ngIf\"], [1, \"dashboard-header\"], [1, \"header-title\"], [1, \"subtitle\"], [1, \"header-filters\"], [\"appearance\", \"outline\"], [3, \"rangePicker\"], [\"matStartDate\", \"\", \"placeholder\", \"Data inicial\", 3, \"ngModelChange\", \"ngModel\"], [\"matEndDate\", \"\", \"placeholder\", \"Data final\", 3, \"ngModelChange\", \"ngModel\"], [\"matIconSuffix\", \"\", 3, \"for\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"summary-cards\"], [1, \"summary-card\"], [1, \"card-content\"], [1, \"card-info\"], [1, \"card-label\"], [1, \"card-value\", \"positive\"], [1, \"card-icon\", \"positive\"], [1, \"card-value\", \"negative\"], [1, \"card-icon\", \"negative\"], [1, \"card-value\", 3, \"ngClass\"], [1, \"card-icon\"], [1, \"card-value\"], [1, \"charts-grid\"], [1, \"chart-card\"], [1, \"chart-wrapper\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"legend\", \"type\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"], [1, \"transactions-card\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Atualizar\", 3, \"click\"], [\"matSort\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"data\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"descricao\"], [\"matColumnDef\", \"tipo\"], [\"matColumnDef\", \"valor\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [1, \"loading-overlay\"], [\"diameter\", \"50\"], [\"mat-sort-header\", \"\"], [3, \"ngClass\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelement(0, \"app-menu\");\n            i0.ɵɵelementStart(1, \"div\", 1);\n            i0.ɵɵtemplate(2, DashboardComponent_div_2_Template, 2, 0, \"div\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n            i0.ɵɵtext(6, \"Dashboard Financeiro\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"p\", 5);\n            i0.ɵɵtext(8, \"Vis\\u00E3o geral das suas finan\\u00E7as\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\", 7)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Per\\u00EDodo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"mat-date-range-input\", 8)(14, \"input\", 9);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_14_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.dataInicio, $event) || (ctx.dataInicio = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"input\", 10);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_15_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.dataFim, $event) || (ctx.dataFim = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(16, \"mat-datepicker-toggle\", 11)(17, \"mat-date-range-picker\", null, 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"button\", 12);\n            i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_19_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.aplicarFiltro());\n            });\n            i0.ɵɵelementStart(20, \"mat-icon\");\n            i0.ɵɵtext(21, \"filter_list\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(22, \" Filtrar \");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(23, \"div\", 13)(24, \"mat-card\", 14)(25, \"div\", 15)(26, \"div\", 16)(27, \"span\", 17);\n            i0.ɵɵtext(28, \"Total Entradas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"span\", 18);\n            i0.ɵɵtext(30);\n            i0.ɵɵpipe(31, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(32, \"mat-icon\", 19);\n            i0.ɵɵtext(33, \"trending_up\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(34, \"mat-card\", 14)(35, \"div\", 15)(36, \"div\", 16)(37, \"span\", 17);\n            i0.ɵɵtext(38, \"Total Sa\\u00EDdas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"span\", 20);\n            i0.ɵɵtext(40);\n            i0.ɵɵpipe(41, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(42, \"mat-icon\", 21);\n            i0.ɵɵtext(43, \"trending_down\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(44, \"mat-card\", 14)(45, \"div\", 15)(46, \"div\", 16)(47, \"span\", 17);\n            i0.ɵɵtext(48, \"Saldo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(49, \"span\", 22);\n            i0.ɵɵtext(50);\n            i0.ɵɵpipe(51, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(52, \"mat-icon\", 23);\n            i0.ɵɵtext(53, \"account_balance_wallet\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(54, \"mat-card\", 14)(55, \"div\", 15)(56, \"div\", 16)(57, \"span\", 17);\n            i0.ɵɵtext(58, \"M\\u00E9dia Mensal\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(59, \"span\", 24);\n            i0.ɵɵtext(60);\n            i0.ɵɵpipe(61, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(62, \"mat-icon\", 23);\n            i0.ɵɵtext(63, \"show_chart\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(64, \"div\", 25)(65, \"mat-card\", 26)(66, \"mat-card-header\")(67, \"mat-card-title\");\n            i0.ɵɵtext(68, \"Receitas vs Despesas por M\\u00EAs\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(69, \"mat-card-content\")(70, \"div\", 27);\n            i0.ɵɵelement(71, \"canvas\", 28);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(72, \"mat-card\", 26)(73, \"mat-card-header\")(74, \"mat-card-title\");\n            i0.ɵɵtext(75, \"Distribui\\u00E7\\u00E3o de Despesas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(76, \"mat-card-content\")(77, \"div\", 27);\n            i0.ɵɵelement(78, \"canvas\", 29);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(79, \"mat-card\", 26)(80, \"mat-card-header\")(81, \"mat-card-title\");\n            i0.ɵɵtext(82, \"Evolu\\u00E7\\u00E3o do Saldo\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(83, \"mat-card-content\")(84, \"div\", 27);\n            i0.ɵɵelement(85, \"canvas\", 29);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(86, \"mat-card\", 30)(87, \"mat-card-header\")(88, \"mat-card-title\");\n            i0.ɵɵtext(89, \" \\u00DAltimas Transa\\u00E7\\u00F5es \");\n            i0.ɵɵelementStart(90, \"button\", 31);\n            i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_90_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.reloadData());\n            });\n            i0.ɵɵelementStart(91, \"mat-icon\");\n            i0.ɵɵtext(92, \"refresh\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(93, \"mat-card-content\")(94, \"mat-table\", 32);\n            i0.ɵɵelementContainerStart(95, 33);\n            i0.ɵɵtemplate(96, DashboardComponent_mat_header_cell_96_Template, 2, 0, \"mat-header-cell\", 34)(97, DashboardComponent_mat_cell_97_Template, 3, 4, \"mat-cell\", 35);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(98, 36);\n            i0.ɵɵtemplate(99, DashboardComponent_mat_header_cell_99_Template, 2, 0, \"mat-header-cell\", 34)(100, DashboardComponent_mat_cell_100_Template, 2, 1, \"mat-cell\", 35);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(101, 37);\n            i0.ɵɵtemplate(102, DashboardComponent_mat_header_cell_102_Template, 2, 0, \"mat-header-cell\", 34)(103, DashboardComponent_mat_cell_103_Template, 3, 5, \"mat-cell\", 35);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(104, 38);\n            i0.ɵɵtemplate(105, DashboardComponent_mat_header_cell_105_Template, 2, 0, \"mat-header-cell\", 34)(106, DashboardComponent_mat_cell_106_Template, 4, 8, \"mat-cell\", 35);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵtemplate(107, DashboardComponent_mat_header_row_107_Template, 1, 0, \"mat-header-row\", 39)(108, DashboardComponent_mat_row_108_Template, 1, 0, \"mat-row\", 40);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(109, \"mat-paginator\", 41);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(110, \"app-footer\");\n          }\n          if (rf & 2) {\n            const picker_r6 = i0.ɵɵreference(18);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"rangePicker\", picker_r6);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.dataInicio);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.dataFim);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", picker_r6);\n            i0.ɵɵadvance(14);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(31, 24, ctx.getTotalEntradas(), \"BRL\"), \" \");\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(41, 27, ctx.getTotalSaidas(), \"BRL\"), \" \");\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(36, _c0, ctx.getSaldo() > 0, ctx.getSaldo() < 0));\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(51, 30, ctx.getSaldo(), \"BRL\"), \" \");\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(61, 33, ctx.getMediaMensal(), \"BRL\"), \" \");\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"type\", ctx.barChartType);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"options\", ctx.pieChartOptions)(\"type\", \"pie\");\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"data\", ctx.lineChartData)(\"options\", ctx.lineChartOptions)(\"type\", \"line\");\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n            i0.ɵɵadvance(13);\n            i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(39, _c1));\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i3.NgModel, i6.MatButton, i6.MatIconButton, i7.MatDatepickerToggle, i7.MatDateRangeInput, i7.MatStartDate, i7.MatEndDate, i7.MatDateRangePicker, i8.MatIcon, i9.MatPaginator, i10.MatProgressSpinner, i11.BaseChartDirective, i12.MenuComponent, i13.FooterComponent, i2.CurrencyPipe, i2.DatePipe],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:24px;background-color:#f5f5f5;min-height:100vh}.dashboard-header[_ngcontent-%COMP%]{margin-bottom:32px}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:28px;color:#1a237e;margin:0;font-weight:500}.dashboard-header[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{color:#666;margin-top:8px}.summary-cards[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:24px;margin-bottom:32px}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:flex-start;padding:16px}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-label[_ngcontent-%COMP%]{font-size:14px;color:#666}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value[_ngcontent-%COMP%]{font-size:24px;font-weight:500}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value.positive[_ngcontent-%COMP%]{color:#4caf50}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value.negative[_ngcontent-%COMP%]{color:#f44336}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon[_ngcontent-%COMP%]{font-size:24px;width:24px;height:24px}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon.positive[_ngcontent-%COMP%]{color:#4caf50}.summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon.negative[_ngcontent-%COMP%]{color:#f44336}.charts-container[_ngcontent-%COMP%]{margin-top:32px}.charts-container[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]{padding:16px}.charts-container[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{margin-bottom:16px}.charts-container[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:20px;color:#1a237e}.charts-container[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]{height:400px;position:relative;margin:0 auto}@media (max-width: 768px){.dashboard-container[_ngcontent-%COMP%]{padding:16px}.summary-cards[_ngcontent-%COMP%]{grid-template-columns:1fr}.chart-wrapper[_ngcontent-%COMP%]{height:300px}}.summary-card[_ngcontent-%COMP%]{transition:transform .2s ease-in-out}.summary-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 4px 8px #0000001a}@media (prefers-color-scheme: dark){.dashboard-container[_ngcontent-%COMP%]{background-color:#1e1e1e}.dashboard-header[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#fff}.card-label[_ngcontent-%COMP%]{color:#ccc!important}mat-card[_ngcontent-%COMP%]{background-color:#2d2d2d;color:#fff}mat-card-title[_ngcontent-%COMP%]{color:#fff!important}}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}