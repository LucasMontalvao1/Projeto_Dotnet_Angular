{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let TransacaoFiltroComponent = /*#__PURE__*/(() => {\n  class TransacaoFiltroComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.filtroChange = new EventEmitter();\n      this.maxDate = new Date();\n      this.destroy$ = new Subject();\n      this.initializeForm();\n    }\n    ngOnInit() {\n      this.setupFormSubscription();\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    initializeForm() {\n      this.filterForm = this.fb.group({\n        tipoFiltro: ['mes'],\n        mesAno: [new Date()],\n        dataInicio: [null],\n        dataFim: [null]\n      });\n    }\n    setupFormSubscription() {\n      this.filterForm.get('tipoFiltro')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.filterForm.patchValue({\n          mesAno: new Date(),\n          dataInicio: null,\n          dataFim: null\n        });\n        this.aplicarFiltro();\n      });\n    }\n    setMonthAndYear(date, datepicker) {\n      const ctrlValue = this.filterForm.get('mesAno')?.value;\n      const ctrlDate = new Date(ctrlValue);\n      ctrlDate.setMonth(date.getMonth());\n      ctrlDate.setFullYear(date.getFullYear());\n      this.filterForm.get('mesAno')?.setValue(ctrlDate);\n      datepicker.close();\n      this.aplicarFiltro();\n    }\n    aplicarFiltro() {\n      if (!this.filterForm.valid) return;\n      // Garantir que as datas estejam no formato correto antes de emitir\n      const formValue = this.filterForm.value;\n      // Se for filtro por período, validar as datas\n      if (formValue.tipoFiltro === 'periodo' && !this.isPeriodoValido()) {\n        return;\n      }\n      const filtro = {\n        tipoFiltro: formValue.tipoFiltro,\n        mesAno: formValue.tipoFiltro === 'mes' ? formValue.mesAno : undefined,\n        dataInicio: formValue.tipoFiltro === 'periodo' ? formValue.dataInicio : undefined,\n        dataFim: formValue.tipoFiltro === 'periodo' ? formValue.dataFim : undefined\n      };\n      this.filtroChange.emit(filtro);\n    }\n    limparFiltro() {\n      this.filterForm.patchValue({\n        tipoFiltro: 'mes',\n        mesAno: new Date(),\n        dataInicio: null,\n        dataFim: null\n      });\n      this.aplicarFiltro();\n    }\n    // Método público pois é usado no template\n    isPeriodoValido() {\n      const inicio = this.filterForm.get('dataInicio')?.value;\n      const fim = this.filterForm.get('dataFim')?.value;\n      return inicio && fim && inicio <= fim;\n    }\n    // Métodos utilitários para formatação de data\n    formatarData(data) {\n      if (!data) return '';\n      return new Date(data).toLocaleDateString('pt-BR');\n    }\n    // Método para obter o mês atual formatado\n    getMesAtual() {\n      const mesAno = this.filterForm.get('mesAno')?.value;\n      if (!mesAno) return '';\n      return new Date(mesAno).toLocaleDateString('pt-BR', {\n        month: 'long',\n        year: 'numeric'\n      });\n    }\n    // Método para verificar se o formulário está em estado de carregamento\n    isLoading() {\n      return this.filterForm.disabled;\n    }\n    // Método para habilitar/desabilitar o formulário\n    setFormEnabled(enabled) {\n      if (enabled) {\n        this.filterForm.enable();\n      } else {\n        this.filterForm.disable();\n      }\n    }\n    static {\n      this.ɵfac = function TransacaoFiltroComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TransacaoFiltroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TransacaoFiltroComponent,\n        selectors: [[\"app-transacao-filtro\"]],\n        outputs: {\n          filtroChange: \"filtroChange\"\n        },\n        decls: 0,\n        vars: 0,\n        template: function TransacaoFiltroComponent_Template(rf, ctx) {},\n        styles: [\".filter-card[_ngcontent-%COMP%]{margin-bottom:24px;border-radius:12px;background-color:#fff;box-shadow:0 2px 4px #0000001a;transition:box-shadow .3s ease}.filter-card[_ngcontent-%COMP%]:hover{box-shadow:0 4px 8px #0000001a}.filter-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]{padding:16px}.filter-form[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:16px;align-items:center}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]{background-color:#f5f5f5;border-radius:8px;margin-right:16px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{padding:4px 12px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px;font-size:18px;vertical-align:middle}.filter-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:auto;min-width:200px;margin-bottom:-1.25em}.filter-form[_ngcontent-%COMP%]   mat-form-field.mat-form-field-appearance-outline[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%]{margin:0}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%]{height:36px;margin-top:3px;padding:0 16px}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.filter-form[_ngcontent-%COMP%]   .action-button[disabled][_ngcontent-%COMP%]{opacity:.6;cursor:not-allowed}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]{height:36px;margin-top:3px}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}.filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]:hover{background-color:#0000000a}[_nghost-%COMP%]     .month-picker .mat-calendar-period-button{pointer-events:none}[_nghost-%COMP%]     .month-picker .mat-calendar-arrow{display:none}[_nghost-%COMP%]     .month-picker .mat-calendar-table{height:auto}[_nghost-%COMP%]     .mat-button-toggle-checked{background-color:#3498db!important;color:#fff!important}[_nghost-%COMP%]     .mat-button-toggle-checked mat-icon{color:#fff!important}[_nghost-%COMP%]     .mat-form-field-appearance-outline .mat-form-field-outline{background-color:#fff}@media (max-width: 768px){.filter-form[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]{width:100%;margin-right:0;margin-bottom:16px}.filter-form[_ngcontent-%COMP%]   .filter-type-group[_ngcontent-%COMP%]   mat-button-toggle[_ngcontent-%COMP%]{flex:1;text-align:center}.filter-form[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{width:100%}.filter-form[_ngcontent-%COMP%]   .action-button[_ngcontent-%COMP%], .filter-form[_ngcontent-%COMP%]   .clear-button[_ngcontent-%COMP%]{width:100%;margin-top:8px}}@keyframes _ngcontent-%COMP%_fadeIn{0%{opacity:0;transform:translateY(-10px)}to{opacity:1;transform:translateY(0)}}.filter-card[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeIn .3s ease-out}\"]\n      });\n    }\n  }\n  return TransacaoFiltroComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}