{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar _a;\nimport { Component, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CategoriaService } from '../../../../services/categoria.service';\nlet CategoriaEditComponent = class CategoriaEditComponent {\n  constructor(fb, categoriaService, dialogRef, data // Recebe o ID da categoria\n  ) {\n    this.fb = fb;\n    this.categoriaService = categoriaService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.isLoading = false;\n    this.error = null;\n    this.form = this.fb.group({\n      nome: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      descricao: ['', [Validators.maxLength(255)]]\n    });\n  }\n  ngOnInit() {\n    this.loadCategoria();\n  }\n  loadCategoria() {\n    this.isLoading = true;\n    this.categoriaService.getCategoriaById(this.data.categoriaID).subscribe({\n      next: categoria => {\n        this.form.patchValue(categoria); // Preenche os campos do formulário com os dados recebidos\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Erro ao carregar categoria:', error);\n        this.error = 'Erro ao carregar dados da categoria';\n        this.isLoading = false;\n      }\n    });\n  }\n  onSubmit() {\n    if (this.form.valid && !this.isLoading) {\n      this.isLoading = true;\n      const categoriaAtualizada = {\n        ...this.form.value,\n        categoriaID: this.data.categoriaID // Mantém o ID da categoria\n      };\n      this.categoriaService.updateCategoria(categoriaAtualizada).subscribe({\n        next: response => {\n          console.log('Categoria editada com sucesso:', response);\n          this.dialogRef.close(true);\n        },\n        error: error => {\n          console.error('Erro ao editar categoria:', error);\n          this.error = error.message;\n          this.isLoading = false;\n        }\n      });\n    }\n  }\n};\nCategoriaEditComponent = __decorate([Component({\n  selector: 'app-categoria-edit',\n  templateUrl: './categoria-edit.component.html',\n  styleUrls: ['./categoria-edit.component.css']\n}), __param(3, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [FormBuilder, typeof (_a = typeof CategoriaService !== \"undefined\" && CategoriaService) === \"function\" ? _a : Object, MatDialogRef, Object])], CategoriaEditComponent);\nexport { CategoriaEditComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}