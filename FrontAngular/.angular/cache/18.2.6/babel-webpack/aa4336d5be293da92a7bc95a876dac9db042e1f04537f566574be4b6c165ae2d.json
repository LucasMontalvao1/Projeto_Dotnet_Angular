{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { TransacaoService } from '@/app/services/transacao.service';\nlet DashboardComponent = class DashboardComponent {\n  constructor(transacaoService) {\n    this.transacaoService = transacaoService;\n    // Dados do gráfico com tipos definidos explicitamente\n    this.barChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Entradas'\n      }, {\n        data: [],\n        label: 'Saídas'\n      }]\n    };\n    this.barChartOptions = {\n      responsive: true\n    };\n    this.barChartLegend = true;\n    this.barChartType = 'bar';\n  }\n  ngOnInit() {\n    this.loadChartData();\n  }\n  loadChartData() {\n    this.transacaoService.getTransacoes().subscribe(transacoes => {\n      // Filtrar e organizar os dados de acordo com o tipo de transação\n      const entradas = transacoes.filter(t => t.tipo === 'Entrada').map(t => t.valor);\n      const saidas = transacoes.filter(t => t.tipo === 'Saída').map(t => t.valor);\n      // Atualizar os dados do gráfico\n      this.barChartData.labels = transacoes.map(t => {\n        const data = new Date(t.data);\n        const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n        return meses[data.getMonth()];\n      });\n      this.barChartData.datasets[0].data = entradas;\n      this.barChartData.datasets[1].data = saidas;\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n}), __metadata(\"design:paramtypes\", [TransacaoService])], DashboardComponent);\nexport { DashboardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}