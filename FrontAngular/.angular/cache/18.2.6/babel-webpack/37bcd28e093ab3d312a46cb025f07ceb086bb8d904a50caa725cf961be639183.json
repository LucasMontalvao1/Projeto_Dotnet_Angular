{"ast":null,"code":"import { RxStompService } from '@stomp/rx-stomp';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LembreteWebSocketService = /*#__PURE__*/(() => {\n  class LembreteWebSocketService {\n    constructor(rxStompService) {\n      this.rxStompService = rxStompService;\n      this.config = {\n        brokerURL: 'ws://localhost:15675/ws',\n        connectHeaders: {},\n        heartbeatIncoming: 0,\n        heartbeatOutgoing: 20000,\n        reconnectDelay: 5000,\n        debug: false // Defina como true se quiser habilitar logs de depuração\n      };\n      this.lembreteSubject = new Subject();\n      this.rxStompService.configure(this.config);\n      this.initAndConnect();\n    }\n    initAndConnect() {\n      this.rxStompService.activate(); // Ativa a conexão\n      this.subscribeToLembretes();\n    }\n    subscribeToLembretes() {\n      this.rxStompService.subscribe('/topic/lembretes').subscribe(message => {\n        const lembrete = JSON.parse(message.body);\n        this.lembreteSubject.next(lembrete);\n      });\n    }\n    getLembretes() {\n      return this.lembreteSubject.asObservable();\n    }\n    disconnect() {\n      this.rxStompService.deactivate(); // Desativa a conexão\n    }\n    static {\n      this.ɵfac = function LembreteWebSocketService_Factory(__ngFactoryType__) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LembreteWebSocketService,\n        factory: LembreteWebSocketService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LembreteWebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}