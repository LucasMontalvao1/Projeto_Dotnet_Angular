{"ast":null,"code":"import { RxStomp } from '@stomp/rx-stomp';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LembreteWebSocketService = /*#__PURE__*/(() => {\n  class LembreteWebSocketService {\n    constructor() {\n      this.lembreteSubject = new Subject();\n      this.rxStomp = new RxStomp();\n      this.configureRxStomp();\n      this.initAndConnect();\n    }\n    configureRxStomp() {\n      this.rxStomp.configure({\n        brokerURL: 'ws://localhost:15674/ws',\n        connectHeaders: {\n          login: 'admin',\n          passcode: 'admin123'\n        },\n        heartbeatIncoming: 4000,\n        heartbeatOutgoing: 4000,\n        reconnectDelay: 5000,\n        debug: str => {\n          console.log(new Date(), str);\n        }\n      });\n    }\n    initAndConnect() {\n      this.rxStomp.activate(); // Ativa a conexão WebSocket\n      this.rxStomp.connected$.subscribe(() => {\n        console.log('Conectado ao WebSocket!');\n        this.subscribeToLembretes(); // Inscreve-se para receber lembretes\n      }, error => {\n        console.error('Erro ao conectar ao WebSocket:', error);\n      });\n    }\n    subscribeToLembretes() {\n      this.rxStomp.watch('/queue/filaLembretes').subscribe({\n        next: message => {\n          console.log('Mensagem recebida do servidor:', message);\n          if (message.body) {\n            try {\n              const lembrete = JSON.parse(message.body);\n              console.log('Novo lembrete recebido:', lembrete);\n              this.lembreteSubject.next(lembrete);\n            } catch (error) {\n              console.error('Erro ao fazer parse do lembrete:', error);\n            }\n          }\n        },\n        error: error => {\n          console.error('Erro ao receber mensagem:', error);\n        }\n      });\n    }\n    getLembretes() {\n      return this.lembreteSubject.asObservable();\n    }\n    disconnect() {\n      this.rxStomp.deactivate();\n      console.log('Desconectado do WebSocket.');\n    }\n    static {\n      this.ɵfac = function LembreteWebSocketService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LembreteWebSocketService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LembreteWebSocketService,\n        factory: LembreteWebSocketService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LembreteWebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}