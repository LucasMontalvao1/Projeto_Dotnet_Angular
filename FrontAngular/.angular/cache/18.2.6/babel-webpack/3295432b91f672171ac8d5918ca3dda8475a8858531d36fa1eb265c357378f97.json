{"ast":null,"code":"import { StompService } from '@stomp/ng2-stompjs';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@stomp/ng2-stompjs\";\nexport let LembreteWebSocketService = /*#__PURE__*/(() => {\n  class LembreteWebSocketService {\n    constructor(stompService) {\n      this.stompService = stompService;\n      this.config = {\n        url: 'ws://localhost:15675/ws',\n        headers: {},\n        // Cabeçalhos, se necessário\n        heartbeatIncoming: 0,\n        heartbeatOutgoing: 20000,\n        reconnectDelay: 5000,\n        debug: str => {\n          console.log(new Date(), str);\n        } // Função de debug\n      };\n      this.lembreteSubject = new Subject();\n      this.stompService.configure(this.config);\n      this.initAndConnect();\n    }\n    initAndConnect() {\n      this.stompService.initAndConnect(); // Mover a lógica de conexão aqui\n      this.subscribeToLembretes();\n    }\n    subscribeToLembretes() {\n      this.stompService.subscribe('/topic/lembretes', message => {\n        const lembrete = JSON.parse(message.body);\n        this.lembreteSubject.next(lembrete); // Emitir lembrete recebido\n      }, {}); // Adicione um cabeçalho vazio aqui\n    }\n    getLembretes() {\n      return this.lembreteSubject.asObservable(); // Retornar o observable\n    }\n    disconnect() {\n      this.stompService.disconnect();\n    }\n    static {\n      this.ɵfac = function LembreteWebSocketService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LembreteWebSocketService)(i0.ɵɵinject(i1.StompService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LembreteWebSocketService,\n        factory: LembreteWebSocketService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LembreteWebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}