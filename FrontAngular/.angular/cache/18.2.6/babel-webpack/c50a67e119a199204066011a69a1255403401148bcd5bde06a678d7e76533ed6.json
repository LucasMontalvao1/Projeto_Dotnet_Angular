{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getErrorMessage(\"username\"), \" \");\n  }\n}\nfunction LoginComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getErrorMessage(\"password\"), \" \");\n  }\n}\nfunction LoginComponent_mat_spinner_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 19);\n  }\n}\nfunction LoginComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Entrar\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router, snackBar) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.isLoading = false;\n      this.errorMessage = null;\n      this.hidePassword = true;\n      this.year = new Date().getFullYear();\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, Validators.minLength(3)]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        rememberMe: [false]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.isLoading = true;\n        this.errorMessage = null;\n        const {\n          username,\n          password,\n          rememberMe\n        } = this.loginForm.value;\n        this.authService.login({\n          username,\n          password\n        }).subscribe({\n          next: user => {\n            if (user && user.token) {\n              if (rememberMe) {\n                // Implementar lógica de \"lembrar-me\" se necessário\n                localStorage.setItem('rememberMe', 'true');\n              }\n              this.authService.storeToken(user.token);\n              this.router.navigate(['/home']);\n              this.showSuccessMessage('Bem-vindo de volta!');\n            } else {\n              this.handleError('Falha na autenticação');\n            }\n          },\n          error: error => {\n            this.handleError(error);\n          }\n        });\n      } else {\n        this.markFormGroupTouched(this.loginForm);\n      }\n    }\n    showSuccessMessage(message) {\n      this.snackBar.open(message, 'Fechar', {\n        duration: 3000,\n        panelClass: ['success-snackbar'],\n        horizontalPosition: 'end',\n        verticalPosition: 'top'\n      });\n    }\n    handleError(error) {\n      const errorMessage = error?.error?.message || 'Ocorreu um erro ao fazer login';\n      this.errorMessage = errorMessage;\n      this.snackBar.open(errorMessage, 'Fechar', {\n        duration: 5000,\n        panelClass: ['error-snackbar'],\n        horizontalPosition: 'end',\n        verticalPosition: 'top'\n      });\n      this.isLoading = false;\n    }\n    markFormGroupTouched(formGroup) {\n      Object.values(formGroup.controls).forEach(control => {\n        control.markAsTouched();\n        if (control instanceof FormGroup) {\n          this.markFormGroupTouched(control);\n        }\n      });\n    }\n    getErrorMessage(controlName) {\n      const control = this.loginForm.get(controlName);\n      if (control?.hasError('required')) {\n        return `${controlName === 'username' ? 'Usuário' : 'Senha'} é obrigatório`;\n      }\n      if (control?.hasError('minlength')) {\n        return `${controlName === 'username' ? 'Usuário' : 'Senha'} deve ter no mínimo ${control.errors?.['minlength'].requiredLength} caracteres`;\n      }\n      return '';\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 43,\n        vars: 10,\n        consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"login-title\"], [1, \"login-subtitle\"], [1, \"login-form\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Digite seu usu\\u00E1rio\", \"autocomplete\", \"username\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"placeholder\", \"Digite sua senha\", \"autocomplete\", \"current-password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"form-options\"], [\"formControlName\", \"rememberMe\", \"color\", \"primary\"], [\"mat-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/forgot-password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"login-button\", 3, \"disabled\"], [\"diameter\", \"20\", \"class\", \"spinner\", 4, \"ngIf\"], [1, \"register-link\"], [\"mat-button\", \"\", \"color\", \"primary\", \"routerLink\", \"/register\"], [1, \"copyright\"], [\"diameter\", \"20\", 1, \"spinner\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\")(4, \"h1\", 2);\n            i0.ɵɵtext(5, \"Bem-vindo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"p\", 3);\n            i0.ɵɵtext(7, \"Entre com suas credenciais para continuar\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(8, \"mat-card-content\")(9, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(10, \"mat-form-field\", 5)(11, \"mat-label\");\n            i0.ɵɵtext(12, \"Usu\\u00E1rio\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"mat-icon\", 6);\n            i0.ɵɵtext(14, \"person\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 7);\n            i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"mat-form-field\", 5)(18, \"mat-label\");\n            i0.ɵɵtext(19, \"Senha\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"mat-icon\", 6);\n            i0.ɵɵtext(21, \"lock\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(22, \"input\", 9);\n            i0.ɵɵelementStart(23, \"button\", 10);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_23_listener() {\n              return ctx.hidePassword = !ctx.hidePassword;\n            });\n            i0.ɵɵelementStart(24, \"mat-icon\");\n            i0.ɵɵtext(25);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(26, LoginComponent_mat_error_26_Template, 2, 1, \"mat-error\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"div\", 11)(28, \"mat-checkbox\", 12);\n            i0.ɵɵtext(29, \" Lembrar-me \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"a\", 13);\n            i0.ɵɵtext(31, \" Esqueceu a senha? \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(32, \"button\", 14);\n            i0.ɵɵtemplate(33, LoginComponent_mat_spinner_33_Template, 1, 0, \"mat-spinner\", 15)(34, LoginComponent_span_34_Template, 2, 0, \"span\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"div\", 16)(36, \"span\");\n            i0.ɵɵtext(37, \"N\\u00E3o tem uma conta?\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"a\", 17);\n            i0.ɵɵtext(39, \" Cadastre-se \");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(40, \"mat-card-footer\")(41, \"p\", 18);\n            i0.ɵɵtext(42);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_5_0;\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"aria-label\", \"Mostrar senha\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.touched);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance(8);\n            i0.ɵɵtextInterpolate1(\"\\u00A9 \", ctx.year, \" Sua Empresa. Todos os direitos reservados.\");\n          }\n        },\n        dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i6.MatCard, i6.MatCardContent, i6.MatCardFooter, i6.MatCardHeader, i6.MatCardTitle, i7.MatFormField, i7.MatLabel, i7.MatError, i7.MatPrefix, i7.MatSuffix, i8.MatInput, i9.MatAnchor, i9.MatButton, i9.MatIconButton, i10.MatIcon],\n        styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh;padding:1.5rem;background-color:#f5f5f5}.login-card[_ngcontent-%COMP%]{width:100%;max-width:400px;padding:2rem;box-shadow:0 4px 12px #0000001a;border-radius:8px}.login-title[_ngcontent-%COMP%]{text-align:center;font-size:1.5rem;margin-bottom:1rem}.login-input[_ngcontent-%COMP%]{width:100%;margin-bottom:1.5rem}button[_ngcontent-%COMP%]{width:100%;padding:.75rem;font-size:1rem}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}