{"ast":null,"code":"import { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TransacaoService } from '../../../../services/transacao.service';\nimport { TransacaoCreateComponent } from '../transacao-create/transacao-create.component';\nimport { TransacaoEditComponent } from '../transacao-edit/transacao-edit.component';\nimport { TransacaoDetailComponent } from '../transacao-detail/transacao-detail.component';\nimport { TransacaoDeleteComponent } from '../transacao-delete/transacao-delete.component';\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/transacao.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/paginator\";\nimport * as i11 from \"@angular/material/menu\";\nimport * as i12 from \"@angular/material/table\";\nimport * as i13 from \"@angular/material/sort\";\nimport * as i14 from \"../../../../components/menu/menu.component\";\nimport * as i15 from \"../../../../components/footer/footer.component\";\nconst _c0 = () => [5, 10, 25, 100];\nconst _c1 = (a0, a1) => ({\n  \"positive\": a0,\n  \"negative\": a1\n});\nfunction TransacaoListComponent_mat_progress_bar_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 29);\n  }\n}\nfunction TransacaoListComponent_th_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 30);\n    i0.ɵɵtext(1, \" Valor \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransacaoListComponent_td_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c1, row_r2.tipo === \"RECEITA\", row_r2.tipo === \"DESPESA\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, row_r2.valor, \"BRL\"), \" \");\n  }\n}\nexport let TransacaoListComponent = /*#__PURE__*/(() => {\n  class TransacaoListComponent {\n    constructor(transacaoService, dialog, snackBar) {\n      this.transacaoService = transacaoService;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.displayedColumns = ['transacaoID', 'data', 'valor', 'tipo', 'descricao', 'categoria', 'acoes'];\n      this.isLoading = true;\n      this.error = null;\n      this.dataSource = new MatTableDataSource();\n    }\n    ngOnInit() {\n      this.loadTransacoes();\n    }\n    loadTransacoes() {\n      this.isLoading = true;\n      this.transacaoService.getTransacoes().subscribe({\n        next: transacoes => {\n          this.dataSource.data = transacoes;\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n          this.isLoading = false;\n        },\n        error: error => {\n          this.error = error.message;\n          this.isLoading = false;\n          this.showMessage('Erro ao carregar transações', true);\n        }\n      });\n    }\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    openCreateDialog() {\n      const dialogRef = this.dialog.open(TransacaoCreateComponent, {\n        width: '600px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.loadTransacoes();\n          this.showMessage('Transação criada com sucesso');\n        }\n      });\n    }\n    openEditDialog(transacao) {\n      const dialogRef = this.dialog.open(TransacaoEditComponent, {\n        width: '600px',\n        data: transacao\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.loadTransacoes();\n          this.showMessage('Transação atualizada com sucesso');\n        }\n      });\n    }\n    openDetailsDialog(transacao) {\n      this.dialog.open(TransacaoDetailComponent, {\n        width: '600px',\n        data: transacao\n      });\n    }\n    openDeleteDialog(transacao) {\n      const dialogRef = this.dialog.open(TransacaoDeleteComponent, {\n        width: '400px',\n        data: transacao\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.loadTransacoes();\n          this.showMessage('Transação excluída com sucesso');\n        }\n      });\n    }\n    showMessage(message, isError = false) {\n      this.snackBar.open(message, 'Fechar', {\n        duration: 5000,\n        panelClass: isError ? ['error-snackbar'] : ['success-snackbar'],\n        horizontalPosition: 'end',\n        verticalPosition: 'top'\n      });\n    }\n    exportarParaExcel() {\n      // Prepara os dados para exportação\n      const dadosExportacao = this.dataSource.filteredData.map(linha => ({\n        'ID': linha.transacaoID,\n        'Data': new Date(linha.data).toLocaleDateString('pt-BR'),\n        'Valor': new Intl.NumberFormat('pt-BR', {\n          style: 'currency',\n          currency: 'BRL'\n        }).format(linha.valor),\n        'Tipo': linha.tipo,\n        'Categoria': linha.categoria.nome,\n        'Descrição': linha.descricao\n      }));\n      // Cria planilha\n      const planilha = XLSX.utils.json_to_sheet(dadosExportacao);\n      // Cria pasta de trabalho\n      const pastaTrabalho = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(pastaTrabalho, planilha, 'Transações');\n      // Gera arquivo Excel\n      XLSX.writeFile(pastaTrabalho, 'transacoes.xlsx');\n      this.showMessage('Arquivo Excel gerado com sucesso');\n    }\n    exportarParaPDF() {\n      // Cria documento PDF\n      const doc = new jsPDF();\n      // Adiciona título\n      doc.setFontSize(16);\n      doc.text('Relatório de Transações', 14, 15);\n      // Prepara os dados para exportação\n      const dadosExportacao = this.dataSource.filteredData.map(linha => [linha.transacaoID, new Date(linha.data).toLocaleDateString('pt-BR'), new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(linha.valor), linha.tipo, linha.categoria.nome, linha.descricao]);\n      // Adiciona tabela ao PDF\n      autoTable(doc, {\n        head: [['ID', 'Data', 'Valor', 'Tipo', 'Categoria', 'Descrição']],\n        body: dadosExportacao,\n        startY: 25,\n        styles: {\n          fontSize: 8,\n          cellPadding: 2,\n          font: 'helvetica'\n        },\n        headStyles: {\n          fillColor: [66, 66, 66]\n        },\n        didDrawPage: function (data) {\n          // Adiciona rodapé com data de geração\n          const rodape = `Gerado em: ${new Date().toLocaleDateString('pt-BR')} ${new Date().toLocaleTimeString('pt-BR')}`;\n          doc.setFontSize(8);\n          doc.text(rodape, data.settings.margin.left, doc.internal.pageSize.height - 10);\n        }\n      });\n      // Salva PDF\n      doc.save('transacoes.pdf');\n      this.showMessage('Arquivo PDF gerado com sucesso');\n    }\n    static {\n      this.ɵfac = function TransacaoListComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TransacaoListComponent)(i0.ɵɵdirectiveInject(i1.TransacaoService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TransacaoListComponent,\n        selectors: [[\"app-transacao-list\"]],\n        viewQuery: function TransacaoListComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatPaginator, 5);\n            i0.ɵɵviewQuery(MatSort, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n          }\n        },\n        decls: 76,\n        vars: 18,\n        consts: [[\"input\", \"\"], [\"exportMenu\", \"matMenu\"], [1, \"main-content\"], [1, \"container\"], [1, \"dashboard-header\"], [1, \"summary-cards\"], [1, \"summary-card\", \"income\"], [1, \"card-icon\"], [1, \"card-info\"], [1, \"card-label\"], [1, \"card-value\"], [1, \"summary-card\", \"expense\"], [1, \"summary-card\", \"balance\"], [1, \"actions-bar\"], [1, \"search-filter\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"placeholder\", \"Ex. dep\\u00F3sito\", 3, \"keyup\"], [\"matSuffix\", \"\"], [1, \"action-buttons-group\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-stroked-button\", \"\", 3, \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"], [1, \"table-container\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"transactions-table\", 3, \"dataSource\"], [\"matColumnDef\", \"valor\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"ngClass\", 4, \"matCellDef\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\", \"pageSize\"], [\"mode\", \"indeterminate\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\", 3, \"ngClass\"]],\n        template: function TransacaoListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 2);\n            i0.ɵɵelement(1, \"app-menu\");\n            i0.ɵɵelementStart(2, \"div\", 3)(3, \"div\", 4)(4, \"h1\");\n            i0.ɵɵtext(5, \"Transa\\u00E7\\u00F5es\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"mat-card\", 6)(8, \"mat-card-content\")(9, \"div\", 7)(10, \"mat-icon\");\n            i0.ɵɵtext(11, \"arrow_upward\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 8)(13, \"span\", 9);\n            i0.ɵɵtext(14, \"Receitas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"span\", 10);\n            i0.ɵɵtext(16);\n            i0.ɵɵpipe(17, \"currency\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(18, \"mat-card\", 11)(19, \"mat-card-content\")(20, \"div\", 7)(21, \"mat-icon\");\n            i0.ɵɵtext(22, \"arrow_downward\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"div\", 8)(24, \"span\", 9);\n            i0.ɵɵtext(25, \"Despesas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"span\", 10);\n            i0.ɵɵtext(27);\n            i0.ɵɵpipe(28, \"currency\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(29, \"mat-card\", 12)(30, \"mat-card-content\")(31, \"div\", 7)(32, \"mat-icon\");\n            i0.ɵɵtext(33, \"account_balance\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(34, \"div\", 8)(35, \"span\", 9);\n            i0.ɵɵtext(36, \"Saldo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"span\", 10);\n            i0.ɵɵtext(38);\n            i0.ɵɵpipe(39, \"currency\");\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(40, \"div\", 13)(41, \"div\", 14)(42, \"mat-form-field\", 15)(43, \"mat-label\");\n            i0.ɵɵtext(44, \"Filtrar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(45, \"input\", 16, 0);\n            i0.ɵɵlistener(\"keyup\", function TransacaoListComponent_Template_input_keyup_45_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.applyFilter($event));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(47, \"mat-icon\", 17);\n            i0.ɵɵtext(48, \"search\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(49, \"div\", 18)(50, \"button\", 19);\n            i0.ɵɵlistener(\"click\", function TransacaoListComponent_Template_button_click_50_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.openCreateDialog());\n            });\n            i0.ɵɵelementStart(51, \"mat-icon\");\n            i0.ɵɵtext(52, \"add\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(53, \" Nova Transa\\u00E7\\u00E3o \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(54, \"button\", 20)(55, \"mat-icon\");\n            i0.ɵɵtext(56, \"download\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(57, \" Exportar \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(58, \"mat-menu\", null, 1)(60, \"button\", 21);\n            i0.ɵɵlistener(\"click\", function TransacaoListComponent_Template_button_click_60_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.exportarParaExcel());\n            });\n            i0.ɵɵelementStart(61, \"mat-icon\");\n            i0.ɵɵtext(62, \"description\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(63, \" Exportar Excel \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(64, \"button\", 21);\n            i0.ɵɵlistener(\"click\", function TransacaoListComponent_Template_button_click_64_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.exportarParaPDF());\n            });\n            i0.ɵɵelementStart(65, \"mat-icon\");\n            i0.ɵɵtext(66, \"picture_as_pdf\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(67, \" Exportar PDF \");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(68, \"mat-card\", 22);\n            i0.ɵɵtemplate(69, TransacaoListComponent_mat_progress_bar_69_Template, 1, 0, \"mat-progress-bar\", 23);\n            i0.ɵɵelementStart(70, \"table\", 24);\n            i0.ɵɵelementContainerStart(71, 25);\n            i0.ɵɵtemplate(72, TransacaoListComponent_th_72_Template, 2, 0, \"th\", 26)(73, TransacaoListComponent_td_73_Template, 3, 8, \"td\", 27);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(74, \"mat-paginator\", 28);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(75, \"app-footer\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            const exportMenu_r3 = i0.ɵɵreference(59);\n            i0.ɵɵadvance(16);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 8, ctx.totalReceitas, \"BRL\"));\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(28, 11, ctx.totalDespesas, \"BRL\"));\n            i0.ɵɵadvance(11);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(39, 14, ctx.saldoTotal, \"BRL\"));\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"matMenuTriggerFor\", exportMenu_r3);\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(17, _c0))(\"pageSize\", 10);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i5.MatCard, i5.MatCardContent, i6.MatFormField, i6.MatLabel, i6.MatSuffix, i7.MatInput, i8.MatButton, i9.MatIcon, i10.MatPaginator, i11.MatMenu, i11.MatMenuItem, i11.MatMenuTrigger, i12.MatTable, i12.MatHeaderCellDef, i12.MatColumnDef, i12.MatCellDef, i12.MatHeaderCell, i12.MatCell, i13.MatSort, i13.MatSortHeader, i14.MenuComponent, i15.FooterComponent, i4.CurrencyPipe],\n        styles: [\".main-content[_ngcontent-%COMP%]{min-height:100vh;display:flex;flex-direction:column}.container[_ngcontent-%COMP%]{padding:20px;flex:1}.header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px}.filter-field[_ngcontent-%COMP%]{width:100%;margin-bottom:20px}table[_ngcontent-%COMP%]{width:100%}.mat-column-acoes[_ngcontent-%COMP%]{width:150px;text-align:center}.action-buttons[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;gap:8px}.mat-column-transacaoID[_ngcontent-%COMP%]{width:80px}.mat-column-data[_ngcontent-%COMP%], .mat-column-valor[_ngcontent-%COMP%]{width:120px}.mat-column-tipo[_ngcontent-%COMP%]{width:100px}.mat-column-categoria[_ngcontent-%COMP%]{width:120px}.no-data[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;padding:20px;color:#0000008a}.no-data[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}@media (max-width: 768px){.mat-column-descricao[_ngcontent-%COMP%], .mat-column-categoria[_ngcontent-%COMP%]{display:none}.action-buttons[_ngcontent-%COMP%]{justify-content:center}}.export-buttons[_ngcontent-%COMP%]{display:flex;gap:16px;margin-bottom:16px}.export-button[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.export-button[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:20px;height:20px;width:20px}@media (max-width: 600px){.export-buttons[_ngcontent-%COMP%]{flex-direction:column;gap:8px}.export-button[_ngcontent-%COMP%]{width:100%;justify-content:center}}\"]\n      });\n    }\n  }\n  return TransacaoListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}