{"ast":null,"code":"import { TransacaoService } from '@/app/services/transacao.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@/app/services/transacao.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/paginator\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nimport * as i11 from \"@angular/material/table\";\nimport * as i12 from \"@angular/material/sort\";\nimport * as i13 from \"ng2-charts\";\nimport * as i14 from \"../../../../components/menu/menu.component\";\nimport * as i15 from \"../../../../components/footer/footer.component\";\nconst _c0 = (a0, a1) => ({\n  \"positive\": a0,\n  \"negative\": a1\n});\nconst _c1 = () => ({\n  responsive: true\n});\nconst _c2 = () => [5, 10, 25, 100];\nfunction DashboardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 46);\n    i0.ɵɵelement(1, \"mat-spinner\", 47);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"mat-card\")(2, \"mat-card-content\")(3, \"mat-icon\", 49);\n    i0.ɵɵtext(4, \"error\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_4_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.reloadData());\n    });\n    i0.ɵɵtext(8, \"Tentar Novamente\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction DashboardComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mes_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", mes_r3, \" \");\n  }\n}\nfunction DashboardComponent_mat_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 51);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ano_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ano_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ano_r5, \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_105_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 52);\n    i0.ɵɵtext(1, \" Data \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_106_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, row_r6.data, \"dd/MM/yyyy\"), \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_108_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 52);\n    i0.ɵɵtext(1, \" Descri\\u00E7\\u00E3o \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_109_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", row_r7.descricao, \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 52);\n    i0.ɵɵtext(1, \" Tipo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_112_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"span\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r8 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", row_r8.tipo.toLowerCase());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", row_r8.tipo, \" \");\n  }\n}\nfunction DashboardComponent_mat_header_cell_114_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\", 52);\n    i0.ɵɵtext(1, \" Valor \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_mat_cell_115_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 54);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, row_r9.tipo === \"Entrada\", row_r9.tipo === \"Sa\\u00EDda\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, row_r9.valor, \"BRL\"), \" \");\n  }\n}\nfunction DashboardComponent_mat_header_row_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction DashboardComponent_mat_row_117_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nfunction DashboardComponent_tr_118_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 55)(1, \"td\", 56);\n    i0.ɵɵtext(2, \" Nenhuma transa\\u00E7\\u00E3o encontrada \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    // Método para recarregar dados\n    reloadData() {\n      this.loadChartData();\n    }\n    // Métodos para cálculos de totais\n    getTotalEntradas() {\n      return this.transacoes.filter(t => t.tipo === 'Entrada').reduce((total, t) => total + t.valor, 0);\n    }\n    getTotalSaidas() {\n      return this.transacoes.filter(t => t.tipo === 'Saída').reduce((total, t) => total + t.valor, 0);\n    }\n    getSaldo() {\n      return this.getTotalEntradas() - this.getTotalSaidas();\n    }\n    getMediaMensal() {\n      const meses = new Set(this.transacoes.map(t => {\n        const data = new Date(t.data);\n        return `${data.getMonth()}-${data.getFullYear()}`;\n      })).size;\n      return meses > 0 ? this.getSaldo() / meses : 0;\n    }\n    // Método para obter mês atual\n    getMesAtual() {\n      const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n      return meses[new Date().getMonth()];\n    }\n    constructor(transacaoService) {\n      this.transacaoService = transacaoService;\n      this.transacoes = [];\n      this.isLoading = false;\n      this.error = null;\n      this.displayedColumns = ['data', 'descricao', 'tipo', 'valor'];\n      this.meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n      this.anos = [];\n      // Filtros de data\n      this.filterForm = new FormGroup({\n        mes: new FormControl(new Date().getMonth()),\n        ano: new FormControl(new Date().getFullYear())\n      });\n      // Configuração do gráfico de barras\n      this.barChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          label: 'Entradas',\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgb(75, 192, 192)',\n          borderWidth: 1\n        }, {\n          data: [],\n          label: 'Saídas',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          borderWidth: 1\n        }]\n      };\n      // Configuração do gráfico de linha (evolução do saldo)\n      this.lineChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          label: 'Saldo',\n          fill: true,\n          tension: 0.4,\n          backgroundColor: 'rgba(66, 135, 245, 0.2)',\n          borderColor: 'rgb(66, 135, 245)',\n          borderWidth: 2\n        }]\n      };\n      // Configuração do gráfico de pizza (distribuição de despesas)\n      this.pieChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n        }]\n      };\n      // Opções comuns dos gráficos\n      this.chartOptions = {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: value => `R$ ${value.toFixed(2)}`\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: context => {\n                let label = context.dataset.label || '';\n                if (label) label += ': ';\n                label += `R$ ${context.raw.toFixed(2)}`;\n                return label;\n              }\n            }\n          }\n        }\n      };\n      this.dataSource = new MatTableDataSource();\n    }\n    ngOnInit() {\n      this.loadChartData();\n    }\n    ngAfterViewInit() {\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sortingDataAccessor = (item, property) => {\n        switch (property) {\n          case 'data':\n            return new Date(item.data);\n          default:\n            return item[property];\n        }\n      };\n    }\n    aplicarFiltro() {\n      const dataInicio = this.filterForm.get('dataInicio')?.value;\n      const dataFim = this.filterForm.get('dataFim')?.value;\n      if (dataInicio && dataFim) {\n        this.loadChartData(dataInicio, dataFim);\n      }\n    }\n    loadChartData(dataInicio, dataFim) {\n      this.isLoading = true;\n      this.error = null;\n      this.transacaoService.getTransacoes().subscribe({\n        next: transacoes => {\n          this.transacoes = transacoes;\n          if (dataInicio && dataFim) {\n            this.transacoes = this.filtrarTransacoesPorPeriodo(transacoes, dataInicio, dataFim);\n          }\n          this.updateAllCharts();\n          this.dataSource.data = this.transacoes;\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error('Erro ao carregar transações:', error);\n          this.error = 'Erro ao carregar os dados. Tente novamente mais tarde.';\n          this.isLoading = false;\n        }\n      });\n    }\n    filtrarTransacoesPorPeriodo(transacoes, inicio, fim) {\n      return transacoes.filter(t => {\n        const data = new Date(t.data);\n        return data >= inicio && data <= fim;\n      });\n    }\n    updateAllCharts() {\n      this.updateBarChart();\n      this.updateLineChart();\n      this.updatePieChart();\n    }\n    updateBarChart() {\n      const transacoesPorMes = this.agruparTransacoesPorMes();\n      const meses = Array.from(transacoesPorMes.keys()).sort();\n      this.barChartData.labels = meses;\n      this.barChartData.datasets[0].data = meses.map(mes => transacoesPorMes.get(mes)?.entradas || 0);\n      this.barChartData.datasets[1].data = meses.map(mes => transacoesPorMes.get(mes)?.saidas || 0);\n    }\n    agruparTransacoesPorMes() {\n      const mesesMap = new Map();\n      const meses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n      this.transacoes.forEach(transacao => {\n        const data = new Date(transacao.data);\n        const mesNome = meses[data.getMonth()];\n        if (!mesesMap.has(mesNome)) {\n          mesesMap.set(mesNome, {\n            entradas: 0,\n            saidas: 0\n          });\n        }\n        const valores = mesesMap.get(mesNome);\n        if (transacao.tipo === 'Entrada') {\n          valores.entradas += transacao.valor;\n        } else {\n          valores.saidas += transacao.valor;\n        }\n      });\n      return mesesMap;\n    }\n    updateLineChart() {\n      // Ordenar transações por data\n      const transacoesOrdenadas = [...this.transacoes].sort((a, b) => new Date(a.data).getTime() - new Date(b.data).getTime());\n      let saldoAcumulado = 0;\n      const dados = transacoesOrdenadas.map(t => {\n        saldoAcumulado += t.tipo === 'Entrada' ? t.valor : -t.valor;\n        return saldoAcumulado;\n      });\n      this.lineChartData.labels = transacoesOrdenadas.map(t => new Date(t.data).toLocaleDateString('pt-BR'));\n      this.lineChartData.datasets[0].data = dados;\n    }\n    agruparDespesasPorCategoria() {\n      const categoriasMap = new Map();\n      this.transacoes.filter(t => t.tipo === 'Saída').forEach(t => {\n        // Usar o ID da categoria em vez do nome\n        const categoriaId = t.categoriaID.toString();\n        const valorAtual = categoriasMap.get(categoriaId) || 0;\n        categoriasMap.set(categoriaId, valorAtual + t.valor);\n      });\n      return categoriasMap;\n    }\n    updatePieChart() {\n      const despesasPorCategoria = this.agruparDespesasPorCategoria();\n      this.pieChartData.labels = Array.from(despesasPorCategoria.keys());\n      this.pieChartData.datasets[0].data = Array.from(despesasPorCategoria.values());\n    }\n    // ... Seus métodos existentes (getTotalEntradas, getTotalSaidas, etc.) ...\n    aplicarFiltroTabela(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TransacaoService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        viewQuery: function DashboardComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatSort, 5);\n            i0.ɵɵviewQuery(MatPaginator, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          }\n        },\n        decls: 121,\n        vars: 42,\n        consts: [[1, \"main-content\"], [1, \"dashboard-container\"], [\"class\", \"loading-overlay\", 4, \"ngIf\"], [\"class\", \"error-alert\", 4, \"ngIf\"], [1, \"dashboard-header\"], [1, \"header-title\"], [1, \"subtitle\"], [1, \"header-filters\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\"], [\"formControlName\", \"mes\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"ano\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"summary-cards\"], [1, \"summary-card\"], [1, \"card-content\"], [1, \"card-info\"], [1, \"card-label\"], [1, \"card-value\", \"positive\"], [1, \"card-icon\", \"positive\"], [1, \"card-value\", \"negative\"], [1, \"card-icon\", \"negative\"], [1, \"card-value\", 3, \"ngClass\"], [1, \"card-icon\"], [1, \"card-value\"], [1, \"charts-grid\"], [1, \"chart-card\"], [1, \"chart-wrapper\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"], [1, \"transactions-card\"], [1, \"table-actions\"], [\"matInput\", \"\", \"placeholder\", \"Ex: Mercado\", 3, \"keyup\"], [\"matSuffix\", \"\"], [\"matSort\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"data\"], [\"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"descricao\"], [\"matColumnDef\", \"tipo\"], [\"matColumnDef\", \"valor\"], [3, \"ngClass\", 4, \"matCellDef\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"showFirstLastButtons\", \"\", \"aria-label\", \"Selecione a p\\u00E1gina de transa\\u00E7\\u00F5es\", 3, \"pageSize\", \"pageSizeOptions\"], [1, \"loading-overlay\"], [\"diameter\", \"50\"], [1, \"error-alert\"], [\"color\", \"warn\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"], [\"mat-sort-header\", \"\"], [1, \"tipo-badge\", 3, \"ngClass\"], [3, \"ngClass\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"app-menu\");\n            i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n            i0.ɵɵtemplate(3, DashboardComponent_div_3_Template, 2, 0, \"div\", 2)(4, DashboardComponent_div_4_Template, 9, 1, \"div\", 3);\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"h1\");\n            i0.ɵɵtext(8, \"Dashboard Financeiro\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"p\", 6);\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"div\", 7)(12, \"form\", 8);\n            i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_12_listener() {\n              return ctx.aplicarFiltro();\n            });\n            i0.ɵɵelementStart(13, \"mat-form-field\", 9)(14, \"mat-label\");\n            i0.ɵɵtext(15, \"M\\u00EAs\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"mat-select\", 10);\n            i0.ɵɵtemplate(17, DashboardComponent_mat_option_17_Template, 2, 2, \"mat-option\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"mat-form-field\", 9)(19, \"mat-label\");\n            i0.ɵɵtext(20, \"Ano\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"mat-select\", 12);\n            i0.ɵɵtemplate(22, DashboardComponent_mat_option_22_Template, 2, 2, \"mat-option\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(23, \"button\", 13)(24, \"mat-icon\");\n            i0.ɵɵtext(25, \"filter_list\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(26, \" Filtrar \");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(27, \"div\", 14)(28, \"mat-card\", 15)(29, \"div\", 16)(30, \"div\", 17)(31, \"span\", 18);\n            i0.ɵɵtext(32, \"Total Entradas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(33, \"span\", 19);\n            i0.ɵɵtext(34);\n            i0.ɵɵpipe(35, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(36, \"mat-icon\", 20);\n            i0.ɵɵtext(37, \"trending_up\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(38, \"mat-card\", 15)(39, \"div\", 16)(40, \"div\", 17)(41, \"span\", 18);\n            i0.ɵɵtext(42, \"Total Sa\\u00EDdas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(43, \"span\", 21);\n            i0.ɵɵtext(44);\n            i0.ɵɵpipe(45, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(46, \"mat-icon\", 22);\n            i0.ɵɵtext(47, \"trending_down\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(48, \"mat-card\", 15)(49, \"div\", 16)(50, \"div\", 17)(51, \"span\", 18);\n            i0.ɵɵtext(52, \"Saldo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(53, \"span\", 23);\n            i0.ɵɵtext(54);\n            i0.ɵɵpipe(55, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(56, \"mat-icon\", 24);\n            i0.ɵɵtext(57, \"account_balance_wallet\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(58, \"mat-card\", 15)(59, \"div\", 16)(60, \"div\", 17)(61, \"span\", 18);\n            i0.ɵɵtext(62, \"M\\u00E9dia Mensal\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(63, \"span\", 25);\n            i0.ɵɵtext(64);\n            i0.ɵɵpipe(65, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(66, \"mat-icon\", 24);\n            i0.ɵɵtext(67, \"show_chart\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(68, \"div\", 26)(69, \"mat-card\", 27)(70, \"mat-card-header\")(71, \"mat-card-title\");\n            i0.ɵɵtext(72, \"Receitas vs Despesas por M\\u00EAs\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(73, \"mat-card-content\")(74, \"div\", 28);\n            i0.ɵɵelement(75, \"canvas\", 29);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(76, \"mat-card\", 27)(77, \"mat-card-header\")(78, \"mat-card-title\");\n            i0.ɵɵtext(79, \"Evolu\\u00E7\\u00E3o do Saldo\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(80, \"mat-card-content\")(81, \"div\", 28);\n            i0.ɵɵelement(82, \"canvas\", 29);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(83, \"mat-card\", 27)(84, \"mat-card-header\")(85, \"mat-card-title\");\n            i0.ɵɵtext(86, \"Distribui\\u00E7\\u00E3o de Despesas\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(87, \"mat-card-content\")(88, \"div\", 28);\n            i0.ɵɵelement(89, \"canvas\", 29);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(90, \"mat-card\", 30)(91, \"mat-card-header\")(92, \"mat-card-title\")(93, \"span\");\n            i0.ɵɵtext(94, \"Transa\\u00E7\\u00F5es Recentes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(95, \"div\", 31)(96, \"mat-form-field\", 9)(97, \"mat-label\");\n            i0.ɵɵtext(98, \"Buscar\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(99, \"input\", 32);\n            i0.ɵɵlistener(\"keyup\", function DashboardComponent_Template_input_keyup_99_listener($event) {\n              return ctx.aplicarFiltroTabela($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(100, \"mat-icon\", 33);\n            i0.ɵɵtext(101, \"search\");\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(102, \"mat-card-content\")(103, \"mat-table\", 34);\n            i0.ɵɵelementContainerStart(104, 35);\n            i0.ɵɵtemplate(105, DashboardComponent_mat_header_cell_105_Template, 2, 0, \"mat-header-cell\", 36)(106, DashboardComponent_mat_cell_106_Template, 3, 4, \"mat-cell\", 37);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(107, 38);\n            i0.ɵɵtemplate(108, DashboardComponent_mat_header_cell_108_Template, 2, 0, \"mat-header-cell\", 36)(109, DashboardComponent_mat_cell_109_Template, 2, 1, \"mat-cell\", 37);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(110, 39);\n            i0.ɵɵtemplate(111, DashboardComponent_mat_header_cell_111_Template, 2, 0, \"mat-header-cell\", 36)(112, DashboardComponent_mat_cell_112_Template, 3, 2, \"mat-cell\", 37);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(113, 40);\n            i0.ɵɵtemplate(114, DashboardComponent_mat_header_cell_114_Template, 2, 0, \"mat-header-cell\", 36)(115, DashboardComponent_mat_cell_115_Template, 3, 8, \"mat-cell\", 41);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵtemplate(116, DashboardComponent_mat_header_row_116_Template, 1, 0, \"mat-header-row\", 42)(117, DashboardComponent_mat_row_117_Template, 1, 0, \"mat-row\", 43)(118, DashboardComponent_tr_118_Template, 3, 0, \"tr\", 44);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(119, \"mat-paginator\", 45);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelement(120, \"app-footer\");\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"Vis\\u00E3o geral das suas finan\\u00E7as - \", ctx.getMesAtual(), \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.filterForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.meses);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.anos);\n            i0.ɵɵadvance(12);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(35, 25, ctx.getTotalEntradas(), \"BRL\"), \" \");\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(45, 28, ctx.getTotalSaidas(), \"BRL\"), \" \");\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(37, _c0, ctx.getSaldo() > 0, ctx.getSaldo() < 0));\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(55, 31, ctx.getSaldo(), \"BRL\"), \" \");\n            i0.ɵɵadvance(10);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(65, 34, ctx.getMediaMensal(), \"BRL\"), \" \");\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.chartOptions)(\"type\", \"bar\");\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"data\", ctx.lineChartData)(\"options\", ctx.chartOptions)(\"type\", \"line\");\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"options\", i0.ɵɵpureFunction0(40, _c1))(\"type\", \"pie\");\n            i0.ɵɵadvance(14);\n            i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n            i0.ɵɵadvance(13);\n            i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"pageSize\", 10)(\"pageSizeOptions\", i0.ɵɵpureFunction0(41, _c2));\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.MatCard, i4.MatCardContent, i4.MatCardHeader, i4.MatCardTitle, i5.MatFormField, i5.MatLabel, i5.MatSuffix, i6.MatInput, i7.MatButton, i8.MatIcon, i9.MatPaginator, i10.MatProgressSpinner, i11.MatTable, i11.MatHeaderCellDef, i11.MatHeaderRowDef, i11.MatColumnDef, i11.MatCellDef, i11.MatRowDef, i11.MatHeaderCell, i11.MatCell, i11.MatHeaderRow, i11.MatRow, i11.MatNoDataRow, i12.MatSort, i12.MatSortHeader, i13.BaseChartDirective, i14.MenuComponent, i15.FooterComponent, i2.CurrencyPipe, i2.DatePipe],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:24px;min-height:calc(100vh - 112px);position:relative;overflow-y:auto;background-color:#f7f7f7}.dashboard-container[_ngcontent-%COMP%]   .loading-overlay[_ngcontent-%COMP%]{position:fixed;inset:64px 0 48px;background-color:#fffc;display:flex;justify-content:center;align-items:center;z-index:999}.dashboard-container[_ngcontent-%COMP%]   .error-alert[_ngcontent-%COMP%]{margin-bottom:24px}.dashboard-container[_ngcontent-%COMP%]   .error-alert[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]{background-color:#ffebee;border-left:4px solid #f44336}.dashboard-container[_ngcontent-%COMP%]   .error-alert[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]{display:flex;align-items:center;gap:16px}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]{margin-bottom:32px}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:24px;color:#673ab7;margin-bottom:8px}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%]{color:#0009}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]   .header-filters[_ngcontent-%COMP%]{margin-top:16px}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]   .header-filters[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;gap:16px;align-items:center;flex-wrap:wrap}.dashboard-container[_ngcontent-%COMP%]   .dashboard-header[_ngcontent-%COMP%]   .header-filters[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{flex:1;min-width:200px}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));gap:24px;margin-bottom:32px}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]{transition:transform .3s ease,box-shadow .3s ease}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]:hover{transform:translateY(-5px);box-shadow:0 4px 15px #0000001a}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]{padding:16px;display:flex;justify-content:space-between;align-items:flex-start}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-label[_ngcontent-%COMP%]{color:#0009;font-size:14px;margin-bottom:8px}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value[_ngcontent-%COMP%]{font-size:24px;font-weight:500}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value.positive[_ngcontent-%COMP%]{color:#4caf50}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-info[_ngcontent-%COMP%]   .card-value.negative[_ngcontent-%COMP%]{color:#f44336}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon[_ngcontent-%COMP%]{font-size:24px}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon.positive[_ngcontent-%COMP%]{color:#4caf50}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .summary-card[_ngcontent-%COMP%]   .card-content[_ngcontent-%COMP%]   .card-icon.negative[_ngcontent-%COMP%]{color:#f44336}.dashboard-container[_ngcontent-%COMP%]   .charts-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(400px,1fr));gap:24px;margin-bottom:32px}.dashboard-container[_ngcontent-%COMP%]   .charts-grid[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   .mat-card-header[_ngcontent-%COMP%]{padding:16px;border-bottom:1px solid rgba(0,0,0,.1)}.dashboard-container[_ngcontent-%COMP%]   .charts-grid[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   .mat-card-header[_ngcontent-%COMP%]   .mat-card-title[_ngcontent-%COMP%]{font-size:18px;margin:0}.dashboard-container[_ngcontent-%COMP%]   .charts-grid[_ngcontent-%COMP%]   .chart-card[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]{height:300px;padding:16px}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-card-header[_ngcontent-%COMP%]{padding:16px}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-card-header[_ngcontent-%COMP%]   .mat-card-title[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-card-header[_ngcontent-%COMP%]   .mat-card-title[_ngcontent-%COMP%]   .table-actions[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:200px}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]{width:100%}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .mat-header-cell[_ngcontent-%COMP%]{font-weight:500;color:#000000de}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .tipo-badge[_ngcontent-%COMP%]{padding:4px 8px;border-radius:4px;font-size:12px}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .tipo-badge.entrada[_ngcontent-%COMP%]{background-color:#4caf501a;color:#4caf50}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .tipo-badge.saida[_ngcontent-%COMP%]{background-color:#f443361a;color:#f44336}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .mat-cell.positive[_ngcontent-%COMP%]{color:#4caf50}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .mat-cell.negative[_ngcontent-%COMP%]{color:#f44336}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-table[_ngcontent-%COMP%]   .mat-row[_ngcontent-%COMP%]:hover{background-color:#0000000a}.dashboard-container[_ngcontent-%COMP%]   .transactions-card[_ngcontent-%COMP%]   .mat-paginator[_ngcontent-%COMP%]{border-top:1px solid rgba(0,0,0,.12)}@media (max-width: 768px){.dashboard-container[_ngcontent-%COMP%]{padding:16px}.dashboard-container[_ngcontent-%COMP%]   .charts-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}.dashboard-container[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]{height:250px}.dashboard-container[_ngcontent-%COMP%]   .header-filters[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{flex-direction:column}.dashboard-container[_ngcontent-%COMP%]   .header-filters[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:100%}}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}