{"ast":null,"code":"import { RxStomp } from '@stomp/rx-stomp';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LembreteWebSocketService = /*#__PURE__*/(() => {\n  class LembreteWebSocketService {\n    constructor() {\n      this.lembreteSubject = new Subject();\n      this.rxStomp = new RxStomp();\n      this.configureRxStomp();\n      this.initAndConnect();\n    }\n    configureRxStomp() {\n      this.rxStomp.configure({\n        brokerURL: 'ws://localhost:15675/ws',\n        // URL do WebSocket\n        connectHeaders: {},\n        heartbeatIncoming: 0,\n        heartbeatOutgoing: 20000,\n        reconnectDelay: 5000,\n        debug: str => {\n          console.log(new Date(), str);\n        } // Função de debug\n      });\n    }\n    initAndConnect() {\n      this.rxStomp.activate(); // Ativa a conexão\n      this.rxStomp.connected$.subscribe(() => {\n        this.subscribeToLembretes(); // Chama a função de subscrição após a conexão\n      });\n    }\n    subscribeToLembretes() {\n      // Assinatura a um tópico\n      this.rxStomp.watch('/topic/lembretes').subscribe({\n        next: message => {\n          // Verifique se o corpo da mensagem não está vazio\n          if (message.body) {\n            const lembrete = JSON.parse(message.body);\n            this.lembreteSubject.next(lembrete);\n          } else {\n            console.error('Mensagem vazia recebida');\n          }\n        },\n        error: err => {\n          console.error('Erro ao receber mensagens:', err);\n        }\n      });\n    }\n    getLembretes() {\n      return this.lembreteSubject.asObservable();\n    }\n    disconnect() {\n      this.rxStomp.deactivate(); // Desativa a conexão\n    }\n    static {\n      this.ɵfac = function LembreteWebSocketService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LembreteWebSocketService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: LembreteWebSocketService,\n        factory: LembreteWebSocketService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LembreteWebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}